/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EnvironmentSendDataAdminWorkArea;

import Business.Assignment.Assignment;
import Business.Data.Data;
import Business.DataWorkQueue.DataWorkQueue;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.CityNetwork;
import Business.Network.CountryNetwork;
import Business.Network.StateNetwork;
import Business.Organization.EnvironmentalDataCollectingOrganization;
import Business.Organization.EnvironmentalSendDataOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.WorkRequest;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class EnvironmentSendDataAdminJPanel extends javax.swing.JPanel {
     private JPanel container;
    private UserAccount account;
    private EnvironmentalSendDataOrganization organization;
    private Enterprise enterprise;
    private EcoSystem business;
    /**
     * Creates new form EnvironmentSendDataAdminJPanel
     */
    

    public EnvironmentSendDataAdminJPanel(JPanel userProcessContainer, UserAccount account, EnvironmentalSendDataOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.container = userProcessContainer;
        this.account =account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
        populateTable();
    }
    private void populateTable(){
   
        DefaultTableModel dtm;
        dtm = (DefaultTableModel)tblR.getModel();
        dtm.setRowCount(0);
        for(WorkRequest request:organization.getWorkQueue().getWorkRequestList()){
            Object[] row1 = new Object[10];
            row1[0]=request.getId();
            row1[1]=request.getCountry();
            row1[2]=request.getState();
            row1[3]=request.getCity();
            row1[4]=request.getFrom();
            row1[5]=request.getTo();
            row1[6]= request.getEnvironment();
            row1[7]=request;
            row1[8]=request.getSender();
            row1[9]=request.getReceiver();
            dtm.addRow(row1)  ;
       
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnSend = new javax.swing.JButton();
        tblRequest1 = new javax.swing.JScrollPane();
        tblR = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setText("Send Data to Forest Department");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, -1, -1));

        btnSend.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSend.setText("Send");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });
        add(btnSend, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 540, -1, -1));

        tblR.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tblR.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "COUNTRY", "STATE", "CITY", "FROM", "TO", "Environmental", "Status", "Sender", "Reeiver"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblRequest1.setViewportView(tblR);

        add(tblRequest1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 1020, 410));

        btnAssign.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnAssign.setText("Assign to me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 540, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/background2.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblR.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row first");
            return;
        }

        WorkRequest request = (WorkRequest)tblR.getValueAt(selectedRow,7);
        request.setReceiver(account);
        request.setStatus("Pending");
        populateTable();
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblR.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row first");
            return;
        }
        
        for(CountryNetwork countryNetwork:business.getCountryNetworkDirectory().getCountryNetworkList()){
                                for(StateNetwork stateNetwork : countryNetwork.getStateNetworkDirectory().getStateNetworkList()){
                                    for(CityNetwork cityNetwork : stateNetwork.getCityNetworkDirectory().getCityNetworkList()) {
                                        for(Enterprise enterprise1:cityNetwork.getEnterpriseDirectory().getEnterpriseList()){
                                                for(Organization organization1:enterprise1.getOrganizationDirectory().getOrganizationList()){
                                            for(UserAccount userAccount:organization1.getUserAccountDirectory().getUserAccountList()){
                                                
                                               userAccount.getDataWorkQueue().getDataworkRequestList().clear();
                                            }
                                                }
                                        }
                                    }
                                }
        }
        
        
        //System.out.println("CLEAR"+);
        
        WorkRequest request = (WorkRequest)tblR.getValueAt(selectedRow,7);
       // SimpleDateFormat sdf =new SimpleDateFormat("yyyy-MM-dd");
        Date joindate = new Date();
        
             
              
       
        
        request.setReceiver(account);
        request.setStatus("Completed");
        for(Organization org1:enterprise.getOrganizationDirectory().getOrganizationList()){
            System.out.println("Q!!!!"+org1);
            if(org1 instanceof EnvironmentalDataCollectingOrganization){
                System.out.println("ASSIGNMENT"+org1.getAssignmentdirectory().getAssignmentList());
                for(Assignment assignment:org1.getAssignmentdirectory().getAssignmentList()){
                    System.out.println("DATA"+assignment.getDatadirectory().getDataList());
                    for(Data data:assignment.getDatadirectory().getDataList()){
                        System.out.println("da"+data.getDate());
                        System.out.println("from"+request.getFrom());
                        System.out.println("to"+request.getTo());
                        System.out.println("CONDITION"+(data.getDate().after(request.getFrom()) && data.getDate().before(request.getTo())));
                       
                            System.out.println("CHECK"+data.getHumidity()+"Date"+data.getDate());
                            System.out.println("11"+request.getSender());
                             if(data.getDate().after(request.getFrom()) && data.getDate().before(request.getTo())){
                            for(CountryNetwork countryNetwork:business.getCountryNetworkDirectory().getCountryNetworkList()){
                                for(StateNetwork stateNetwork : countryNetwork.getStateNetworkDirectory().getStateNetworkList()){
                                    for(CityNetwork cityNetwork : stateNetwork.getCityNetworkDirectory().getCityNetworkList()) {
                                        for(Enterprise enterprise1:cityNetwork.getEnterpriseDirectory().getEnterpriseList()){
                                                for(Organization organization1:enterprise1.getOrganizationDirectory().getOrganizationList()){
                                            for(UserAccount userAccount:organization1.getUserAccountDirectory().getUserAccountList()){
                                                
                                                System.out.println("U&A"+userAccount+"SS"+request.getSender());
                                                System.out.println("CHECKINGCONDITIOn"+String.valueOf(userAccount).equals(String.valueOf(request.getSender())));
                                                //System.out.println("USERACCOUNT WORKQUEUE"+userAccount.getDataWorkQueue().getDataworkRequestList());
                                                     System.out.println("123"+data.getHumidity());
                                                     System.out.println("USERACCOUNT"+userAccount);
                                                System.out.println("SS"+userAccount.getDataWorkQueue());
    
                                                userAccount.getDataWorkQueue().addDataWorkRequest(data.getDate(),data.getWindspeed(),data.getTemperature(),data.getHumidity(),request.getFrom(),request.getTo());
                                            //    userAccount.getDatadirectory().createData(data.getDate(),data.getWindspeed(),data.getTemperature(),data.getHumidity());
                                                System.out.println("USERDATA11111111"+userAccount.getDataWorkQueue().getDataworkRequestList());
                                            }
                                                }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        
        
        
        
        
        
        populateTable();
    }//GEN-LAST:event_btnSendActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnSend;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTable tblR;
    private javax.swing.JScrollPane tblRequest1;
    // End of variables declaration//GEN-END:variables
}
