/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Network.CountryNetwork;
import Business.Network.StateNetwork;
import java.awt.CardLayout;
import java.awt.Component;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class ManageStateJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageStateJPanel
     */
    private JPanel container;
    private EcoSystem system;
    int i=0;
    private ArrayList checkuniquelist ;
    public ManageStateJPanel(JPanel container, EcoSystem system) {
        initComponents();
        this.container = container;
        this.system = system;
        checkuniquelist = new ArrayList();
        populateStateTable();
        populateCountryComboBox();
       
    }
    
    private void populateCountryComboBox() {
        comboCountry.removeAllItems();
        for(CountryNetwork countryNetwork:system.getCountryNetworkDirectory().getCountryNetworkList()){
            comboCountry.addItem(countryNetwork);
        }
    }
    
    
    private void populateStateTable(){
        
         DefaultTableModel dtm = (DefaultTableModel) tblState.getModel();
         dtm.setRowCount(0);
        for(CountryNetwork countryNetwork:system.getCountryNetworkDirectory().getCountryNetworkList()){
            for(StateNetwork stateNetwork : countryNetwork.getStateNetworkDirectory().getStateNetworkList()){
                //System.out.print(i);
               // System.out.print(countryNetwork);
               // System.out.print(stateNetwork);
               // if(countryNetwork != null){
                Object[] row = new Object[2];
                row[0]=countryNetwork.getName();
                row[1]=stateNetwork.getName();
                checkuniquelist.add(stateNetwork.getName());
                dtm.addRow(row);
              //  i++;
              //  }
            }
            
        }
    }
    
    private  void populateCountryTable(){
         DefaultTableModel dtm = (DefaultTableModel) tblState.getModel();
       dtm.setRowCount(0);

        for(CountryNetwork countryNetwork:system.getCountryNetworkDirectory().getCountryNetworkList()){

            if(countryNetwork == comboCountry.getSelectedItem()){
            
            for(StateNetwork stateNetwork : countryNetwork.getStateNetworkDirectory().getStateNetworkList()){
               
                
                        Object[] row = new Object[2];
                        row[0]=countryNetwork.getName();
                        row[1]=stateNetwork.getName();
                        dtm.addRow(row);
                    }
           
            
            }
        }
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblState = new javax.swing.JTable();
        txtState = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboCountry = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblState.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tblState.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Country", "State"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblState);
        if (tblState.getColumnModel().getColumnCount() > 0) {
            tblState.getColumnModel().getColumn(0).setResizable(false);
            tblState.getColumnModel().getColumn(1).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 404, 91));

        txtState.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        add(txtState, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 280, 150, -1));

        btnSubmit.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, -1, -1));

        btnBack.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 620, -1, -1));

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Country:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("State:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 280, -1, -1));

        comboCountry.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        comboCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCountryActionPerformed(evt);
            }
        });
        add(comboCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 240, 150, -1));

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel3.setText("MANAGE STATES");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 50, 230, 30));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/background2.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        Component[] componentArray = container.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel sysAdminwjp = (SystemAdminWorkAreaJPanel) component;
        sysAdminwjp.populateTree();

        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        int a=0;
        if(!checkuniquelist.contains(txtState.getText()) && !txtState.getText().isEmpty()){
        CountryNetwork countryNetwork = (CountryNetwork) comboCountry.getSelectedItem();
        String state = txtState.getText();
        if((state != null)&&!(state.isEmpty()))
        {
            Pattern pattern = Pattern.compile("[^A-Za-z]");
            Matcher m = pattern.matcher(state);
            boolean boo = m.find();
            if(boo == true || state == null) {
                JOptionPane.showMessageDialog(null,"Enter Valid Details");
            }
            else{  
                int count =0;
                for(StateNetwork stateNetwork:countryNetwork.getStateNetworkDirectory().getStateNetworkList()){
                    if(state.equalsIgnoreCase(stateNetwork.getName())){
                        count++;
                    }
                }
                System.out.println("count"+count);
               
                for(CountryNetwork countryNetwork1:system.getCountryNetworkDirectory().getCountryNetworkList()){
                 if(count == 0){
                    if(countryNetwork1 == countryNetwork ){
                        StateNetwork  stateNetwork= countryNetwork1.getStateNetworkDirectory().createAndAddStateNetwork(state);
                        populateStateTable();
                    } 
                }
                  else{
                    if(a==0){
                    JOptionPane.showMessageDialog(null,"State already exists");
                    a++;
                    }
                 }
                }
               
            }
        }
        else {
            JOptionPane.showMessageDialog(null,"Enter Valid Details");
        }
        }
        else{
            System.out.println("a"+a);
            if(a == 0){
            JOptionPane.showMessageDialog(null,"State already exists");
            }
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void comboCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCountryActionPerformed
        // TODO add your handling code here:
         CountryNetwork countryNetwork = (CountryNetwork) comboCountry.getSelectedItem();
        if(countryNetwork != null){
            populateCountryTable();
        }
    }//GEN-LAST:event_comboCountryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox comboCountry;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblState;
    private javax.swing.JTextField txtState;
    // End of variables declaration//GEN-END:variables
}
