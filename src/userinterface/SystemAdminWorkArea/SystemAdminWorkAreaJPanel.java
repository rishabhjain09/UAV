/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.SystemAdminWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.CityNetwork;
import Business.Network.CountryNetwork;
import Business.Network.StateNetwork;
import Business.Organization.Organization;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JPanel;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author Administrator
 */
public class SystemAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminWorkAreaJPanel
     */
    private JPanel container;
    private EcoSystem system;
    public SystemAdminWorkAreaJPanel(JPanel container,EcoSystem system) {
        initComponents();
        this.container = container;
        this.system = system;
        
        populateTree();
    }
    public void populateTree() {
        
        DefaultTreeModel model = (DefaultTreeModel) jTree.getModel();
        ArrayList<CountryNetwork> countryNetworkList = system.getCountryNetworkDirectory().getCountryNetworkList();
        ArrayList<StateNetwork> sateNetworkList ;
        ArrayList<CityNetwork> cityNetworkList;
        ArrayList<Enterprise> enterpriseList;
        ArrayList<Organization> organizationList;
        
        CountryNetwork countryNetwork;
        StateNetwork stateNetwork;
        CityNetwork cityNetwork;
        Enterprise enterprise;
        Organization organization;
        
        DefaultMutableTreeNode cnetwork = new DefaultMutableTreeNode("CountryNetworks");
        //START NOTSURE
        DefaultMutableTreeNode snetwork = new DefaultMutableTreeNode("StateNetworks");
        DefaultMutableTreeNode cinetwork = new DefaultMutableTreeNode("CityNetworks");
        //END NOT SURE
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) model.getRoot();
        root.removeAllChildren();
        root.insert(cnetwork, 0);
        
        DefaultMutableTreeNode countryNetworkNode;
        DefaultMutableTreeNode stateNetworkNode;
        DefaultMutableTreeNode cityNetworkNode;
        DefaultMutableTreeNode enterpriseNode;
        DefaultMutableTreeNode organizationNode;
        
        for (int i = 0; i < countryNetworkList.size(); i++) {
            countryNetwork = countryNetworkList.get(i);
            countryNetworkNode = new DefaultMutableTreeNode(countryNetwork.getName());
            cnetwork.insert(countryNetworkNode,i);
            
            for(int j = 0; j< countryNetwork.getStateNetworkDirectory().getStateNetworkList().size();j++ ){
                stateNetwork = countryNetwork.getStateNetworkDirectory().getStateNetworkList().get(j);
                stateNetworkNode = new DefaultMutableTreeNode(stateNetwork.getName());
                snetwork.insert(stateNetworkNode,j);
                for(int k=0; k<stateNetwork.getCityNetworkDirectory().getCityNetworkList().size();k++){
                    cityNetwork = stateNetwork.getCityNetworkDirectory().getCityNetworkList().get(k);
                    cityNetworkNode = new DefaultMutableTreeNode(cityNetwork.getName());
                    cinetwork.insert(cityNetworkNode,k);
                    
                    
                    enterpriseList = cityNetwork.getEnterpriseDirectory().getEnterpriseList();
                    
                    for(int l = 0; l <enterpriseList.size();l++){
                        enterprise = enterpriseList.get(l);
                        enterpriseNode = new DefaultMutableTreeNode(enterprise.getName());
                        cityNetworkNode.insert(enterpriseNode,l);
                        
                        organizationList = enterprise.getOrganizationDirectory().getOrganizationList();
                        for(int m = 0 ; m < organizationList.size(); m++){
                            organization = organizationList.get(m);
                            organizationNode = new DefaultMutableTreeNode(organization.getName());
                            enterpriseNode.insert(organizationNode,m);
                        }
                    }
                }
            }
        }
           
        model.reload();
                
    }
            
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTree = new javax.swing.JTree();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblSelectedNode = new javax.swing.JLabel();
        btnManageCity = new javax.swing.JButton();
        btnManageEnterprise = new javax.swing.JButton();
        btnManageEnterpriseAdmin = new javax.swing.JButton();
        btnManageCountry = new javax.swing.JButton();
        btnManageState = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(100, 650));
        jPanel1.setPreferredSize(new java.awt.Dimension(100, 650));

        jTree.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTree.setMinimumSize(new java.awt.Dimension(100, 100));
        jTree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                valueChangedAction(evt);
            }
        });
        jScrollPane1.setViewportView(jTree);

        jPanel1.add(jScrollPane1);

        jSplitPane1.setLeftComponent(jPanel1);

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Selected Node:");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, -1, -1));

        lblSelectedNode.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lblSelectedNode.setText("<view_selected_node>");
        jPanel2.add(lblSelectedNode, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, -1, -1));

        btnManageCity.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnManageCity.setText("Manage City");
        btnManageCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageCityActionPerformed(evt);
            }
        });
        jPanel2.add(btnManageCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 211, -1));

        btnManageEnterprise.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnManageEnterprise.setText("Manage Enterprise");
        btnManageEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageEnterpriseActionPerformed(evt);
            }
        });
        jPanel2.add(btnManageEnterprise, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 290, 211, -1));

        btnManageEnterpriseAdmin.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnManageEnterpriseAdmin.setText("Manage Enterprise Admin");
        btnManageEnterpriseAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageEnterpriseAdminActionPerformed(evt);
            }
        });
        jPanel2.add(btnManageEnterpriseAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 350, -1, -1));

        btnManageCountry.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnManageCountry.setText("Manage Country");
        btnManageCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageCountryActionPerformed(evt);
            }
        });
        jPanel2.add(btnManageCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 110, 211, -1));

        btnManageState.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        btnManageState.setText("Manage State");
        btnManageState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageStateActionPerformed(evt);
            }
        });
        jPanel2.add(btnManageState, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 170, 211, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/background2.png"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-108, -5, 1100, 710));

        jSplitPane1.setRightComponent(jPanel2);

        add(jSplitPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void btnManageCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageCityActionPerformed
        ManageCityJPanel manageCityJPanel = new ManageCityJPanel(container,system);
        container.add("ManageCityJPanel", manageCityJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnManageCityActionPerformed

    private void btnManageEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageEnterpriseActionPerformed
        ManageEnterpriseJPanel manageEnterpriseJPanel = new ManageEnterpriseJPanel(container,system);
        container.add("ManageEnterpriseJPanel", manageEnterpriseJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnManageEnterpriseActionPerformed

    private void btnManageEnterpriseAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageEnterpriseAdminActionPerformed
        ManageEnterpriseAdminJPanel manageEnterpriseAdminJPanel = new ManageEnterpriseAdminJPanel(container,system);
        container.add("ManageEnterpriseAdminJPanel", manageEnterpriseAdminJPanel );
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnManageEnterpriseAdminActionPerformed

    private void btnManageCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageCountryActionPerformed
        // TODO add your handling code here:
       ManageCountryJPanel manageCountryJPanel = new ManageCountryJPanel(container,system);
        container.add("ManageCountryJPanel", manageCountryJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnManageCountryActionPerformed

    private void btnManageStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageStateActionPerformed
        // TODO add your handling code here:
        ManageStateJPanel manageStateJPanel = new ManageStateJPanel(container,system);
        container.add("ManageCityJPanel", manageStateJPanel);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnManageStateActionPerformed

    private void valueChangedAction(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_valueChangedAction
        // TODO add your handling code here:
        DefaultMutableTreeNode selectedNode = (DefaultMutableTreeNode) jTree.getLastSelectedPathComponent();
        if(selectedNode != null){
            lblSelectedNode.setText(selectedNode.toString());
        }
    }//GEN-LAST:event_valueChangedAction


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnManageCity;
    private javax.swing.JButton btnManageCountry;
    private javax.swing.JButton btnManageEnterprise;
    private javax.swing.JButton btnManageEnterpriseAdmin;
    private javax.swing.JButton btnManageState;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTree jTree;
    private javax.swing.JLabel lblSelectedNode;
    // End of variables declaration//GEN-END:variables
}
