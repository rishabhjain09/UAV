/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.ProviderInventoryAdminWorkArea;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Inventory.Inventory;
import Business.Organization.InventoryOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.InventoryWorkRequest;
import Business.WorkQueue.RenderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class RequestReceivedInventoryJPanel111111 extends javax.swing.JPanel {

    /**
     * Creates new form ManageInventoryJPanel
     */
    private JPanel container;
    private UserAccount account;
    private Enterprise enterprise;
    private InventoryOrganization organization;
    private EcoSystem business;
    
    public RequestReceivedInventoryJPanel111111(JPanel container, UserAccount account, InventoryOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.container = container;
        this.account = account;
        this.organization =organization;
        this.enterprise = enterprise;
        this.business=business;
        populateTable();
    }

    public void populateTable(){
        System.out.println("OQQQRRGGAA"+organization);
        DefaultTableModel dtm = (DefaultTableModel)tblInventory.getModel();
        dtm.setRowCount(0);
        System.out.println("AAABBB"+organization.getWorkQueue().getWorkRequestList());
        for(WorkRequest request: organization.getWorkQueue().getWorkRequestList()){
           // try{
             //   System.out.println("RENDER"+request.getRentalorrender().equals("Render"));
             //   System.out.println("RENTAL"+request.getRentalorrender().equals("Rental"));
             //   System.out.println("ss"+(!request.getRentalorrender().equals("Render") || !request.getRentalorrender().equals("Rental") ));
             
             if(request.getRentalorrender() == null){
                 System.out.println("ENTERIN");
                 if(request.getRentalorrender() == null){
                     request.setRentalorrender("Waiting");
                 } 
           if(!request.getRentalorrender().equals("Render") || !request.getRentalorrender().equals("Rental") ){
                Object[] row1 = new Object[6];
                row1[0]=request.getId();
                row1[1]=request.getSender().getEmployee().getName();
                row1[2]=request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();;
                row1[3]=request.getProduct();
                row1[4]=request;
                row1[5]=request.getQuantity();
                dtm.addRow(row1);
           }
          }
        //    catch(Exception e ){
                
         //   }
           
        }
    }
    /*
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblInventory.getModel();

        model.setRowCount(0);
        for (Inventory inventory : enterprise.getInventoryDirectory().getInventoryList()) {
                Object[] row = new Object[9];

                
                //row[0] = inventory.getInventoryId();
                //row[1] = inventory.getProductName();
                //row[2] = inventory.getProductPrice();
                //row[3] = inventory.getProductQuantity();

                model.addRow(row);
        }
    }
    */

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblInventory = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        btnProcess = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblInventory.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tblInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Sender", "Receiver", "Product", "Status", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInventory);
        if (tblInventory.getColumnModel().getColumnCount() > 0) {
            tblInventory.getColumnModel().getColumn(0).setResizable(false);
            tblInventory.getColumnModel().getColumn(1).setResizable(false);
            tblInventory.getColumnModel().getColumn(2).setResizable(false);
            tblInventory.getColumnModel().getColumn(3).setResizable(false);
            tblInventory.getColumnModel().getColumn(4).setResizable(false);
            tblInventory.getColumnModel().getColumn(5).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 70, 890, 440));

        btnBack.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 630, -1, -1));

        btnProcess.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 530, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/background2.png"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblInventory.getSelectedRow();
        
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        
        InventoryWorkRequest request = (InventoryWorkRequest)tblInventory.getValueAt(selectedRow,4);
     
        request.setStatus("Processing");
        ProviderRequestReceivedProcessInventoryJPanel renderprocesssupplierinventory = new ProviderRequestReceivedProcessInventoryJPanel(container,account,organization,enterprise,business,request);
        container.add("RenderProcessSupplierInventoryJPanel", renderprocesssupplierinventory);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.next(container);
    }//GEN-LAST:event_btnProcessActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProcess;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblInventory;
    // End of variables declaration//GEN-END:variables
}
