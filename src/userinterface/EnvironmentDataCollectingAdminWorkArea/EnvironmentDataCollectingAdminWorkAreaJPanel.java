/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EnvironmentDataCollectingAdminWorkArea;

import Business.Assignment.Assignment;
import Business.Data.Data;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Inventory.Inventory;
import Business.Organization.EnvironmentalAssignOrganization;
import Business.Organization.EnvironmentalDataCollectingOrganization;
import Business.Organization.InventoryOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class EnvironmentDataCollectingAdminWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EnvironmentDataCollectingAdminWorkAreaJPanel
     */
    private JPanel container;
    private UserAccount account;
    private EnvironmentalDataCollectingOrganization organization;
    private Enterprise enterprise;
    private EcoSystem business;
    

    public EnvironmentDataCollectingAdminWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, EnvironmentalDataCollectingOrganization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.container = userProcessContainer;
        this.account = account;
        this.organization =organization;
        this.enterprise = enterprise;
        this.business=business;
        populateTable();
    }

    public void populateTable(){
      
      DefaultTableModel dtm = (DefaultTableModel)tblAssign.getModel();
       dtm.setRowCount(0);
          
           Object[] row1 = new Object[7];
 
     
    for(Organization organization2:enterprise.getOrganizationDirectory().getOrganizationList()){
            //System.out.println("AAAAA"+String.valueOf(organization2).equals("Environmental Assign Organization"));
            System.out.println("11"+organization2);
          //  System.out.println("12"+organization2.getAssignmentdirectory().getAssignmentList());
            if(organization2 instanceof EnvironmentalAssignOrganization){
                System.out.println("12"+organization2.getAssignmentdirectory().getAssignmentList());
    for(Assignment assignment: organization2.getAssignmentdirectory().getAssignmentList()){
        
        row1[0]=assignment.getAssignmentId();
        row1[1]=assignment.getProductName();
        row1[2]=assignment.getCountry();
        row1[3]=assignment.getState();
        row1[4]=assignment.getCity();
        row1[5]=assignment.getLocation();
        row1[6]=assignment.getZipcode();
        dtm.addRow(row1);
    }
            }
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtWindSpeed = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtHumidity = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblAssign = new javax.swing.JTable();
        dateChooserCombo1 = new datechooser.beans.DateChooserCombo();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setText("Data Collecting");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Wind Speed:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 420, -1, -1));

        txtWindSpeed.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        add(txtWindSpeed, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 420, 150, -1));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel3.setText("Temperature:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 460, -1, -1));

        txtTemperature.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        add(txtTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 460, 150, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("Humidity:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 500, -1, -1));

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel5.setText("Date:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 380, -1, -1));

        txtHumidity.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        add(txtHumidity, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 500, 150, -1));

        btnSubmit.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 540, -1, -1));

        btnBack.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 630, -1, -1));

        tblAssign.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Product Name", "Country", "State", "City", "Location", "ZipCode"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblAssign);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 990, 260));

        dateChooserCombo1.setCurrentView(new datechooser.view.appearance.AppearancesList("Grey",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Lucida Grande", java.awt.Font.PLAIN, 13),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    dateChooserCombo1.setCalendarBackground(new java.awt.Color(204, 204, 204));
    dateChooserCombo1.setNothingAllowed(false);
    dateChooserCombo1.setFieldFont(new java.awt.Font("Verdana", java.awt.Font.PLAIN, 12));
    dateChooserCombo1.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);
    add(dateChooserCombo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 380, 150, -1));

    jLabel7.setText("%");
    add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 500, 50, 30));

    jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/background2.png"))); // NOI18N
    jLabel6.setText("jLabel6");
    add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));

    jLabel8.setText("m/s");
    add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 416, 50, 30));

    jLabel9.setText("°C");
    add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 460, 50, 30));
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAssign.getSelectedRow();
        
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }

        String productname = String.valueOf(tblAssign.getValueAt(selectedRow,1));
        String country = String.valueOf(tblAssign.getValueAt(selectedRow,2));
        String state = String.valueOf(tblAssign.getValueAt(selectedRow,3));
        String city = String.valueOf(tblAssign.getValueAt(selectedRow,4)); 
        String location = String.valueOf(tblAssign.getValueAt(selectedRow,5));
        String zipcode = String.valueOf(tblAssign.getValueAt(selectedRow,6));
        String windspeed1 = txtWindSpeed.getText();
        String temperature1 = txtTemperature.getText();
        String humidity1 = txtHumidity.getText();
        //float Windspeed = Float.parseFloat(txtWindSpeed.getText());
        //float temperature = Float.parseFloat(txtTemperature.getText());
        //float humiditiy = Float.parseFloat(txtHumidity.getText());
        String join1 = dateChooserCombo1.getText();
        if((windspeed1!= null)&&!(windspeed1.isEmpty()) && (temperature1 != null)&&!(temperature1.isEmpty())
                && (humidity1!= null)&&!(humidity1.isEmpty()) )
        {
            Pattern pattern = Pattern.compile("[^A-Za-z0-9]");
            Matcher m = pattern.matcher(windspeed1+temperature1+humidity1);
            boolean boo = m.find();
            if(boo == true || windspeed1 == null || temperature1 == null || humidity1 == null) {
                JOptionPane.showMessageDialog(null,"Enter Valid Details");
            }
            else{  
                float Windspeed = Float.parseFloat(txtWindSpeed.getText());
                float temperature = Float.parseFloat(txtTemperature.getText());
                float humiditiy = Float.parseFloat(txtHumidity.getText());
                Date joindate = new Date();
                try {
                    joindate =new SimpleDateFormat("MM/dd/yyyy").parse(join1);
                } catch (ParseException ex) {
                    JOptionPane.showMessageDialog(null, "Please enter a valid date");
                }
                System.out.println("WELCOME"); 
                System.out.println("1");
                System.out.println("2");
                System.out.println(organization.getAssignmentdirectory().getAssignmentList().isEmpty());
                if(organization.getAssignmentdirectory().getAssignmentList().isEmpty()){
                organization.getAssignmentdirectory().createAssignment(productname, country, state, city, location, zipcode);
                }
                System.out.println("QQQQWWWWAA"+organization.getAssignmentdirectory().getAssignmentList());
                System.out.println("2in"+organization.getAssignmentdirectory().getAssignmentList());
                for(Assignment assignment:organization.getAssignmentdirectory().getAssignmentList()){
                    System.out.println("aaqqqqqqqddd");
                    if(assignment.getProductName().equals(productname) && assignment.getLocation().equals(location)){
                        System.out.println("!@!@!@"+assignment);
                        assignment.getDatadirectory().createData(joindate, Windspeed, temperature, humiditiy);
                    }
                }
                
                for(Assignment assignment:organization.getAssignmentdirectory().getAssignmentList()){
                    for(Data data:assignment.getDatadirectory().getDataList()){
                        System.out.println("Arraylist"+assignment.getDatadirectory().getDataList());
                        System.out.println("COUNT"+data.getHumidity());
                    }
                }
            }
        }
        else {
            JOptionPane.showMessageDialog(null,"Enter Valid Details");
        }
    }//GEN-LAST:event_btnSubmitActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSubmit;
    private datechooser.beans.DateChooserCombo dateChooserCombo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblAssign;
    private javax.swing.JTextField txtHumidity;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextField txtWindSpeed;
    // End of variables declaration//GEN-END:variables
}
