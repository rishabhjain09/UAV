/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EnvironmentAssignAdminWorkArea;

import Business.Assignment.Assignment;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Inventory.Inventory;
import Business.Network.CityNetwork;
import Business.Network.CountryNetwork;
import Business.Network.StateNetwork;
import Business.Organization.EnvironmentalAssignOrganization;
import Business.Organization.InventoryOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class EnvironmentAssignJPanel extends javax.swing.JPanel {

    /**
     * Creates new form EnvironmentAssignAdminWorkAreaJPanel
     */
    private JPanel container;
    private UserAccount account;
    private Enterprise enterprise;
    private EnvironmentalAssignOrganization  organization;
    private EcoSystem business;
    private static int a =0;
    private static int b=0;
    
    public EnvironmentAssignJPanel(JPanel container, UserAccount account, EnvironmentalAssignOrganization  organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.container = container;
        this.account = account;
        this.organization =organization;
        this.enterprise = enterprise;
        this.business=business;
        populateCountryComboBox();
        populateTable1();
        System.out.println("Enterprise"+this.enterprise);
        
    }

      private void populateCountryComboBox() {
        comboAssignCountry.removeAllItems();
        for(CountryNetwork countryNetwork:business.getCountryNetworkDirectory().getCountryNetworkList()){
            comboAssignCountry.addItem(countryNetwork);
        }
    }
    private void populateStateComboBox(CountryNetwork countryNetwork) {
        comboAssignState.removeAllItems();
     
       for(StateNetwork stateNetwork:countryNetwork.getStateNetworkDirectory().getStateNetworkList()){
           comboAssignState.addItem(stateNetwork);
       }
    }
    private void populateCityComboBox(StateNetwork stateNetwork) {
      comboAssignCity.removeAllItems();
      
      for(CityNetwork cityNetwork:stateNetwork.getCityNetworkDirectory().getCityNetworkList()){
          comboAssignCity.addItem(cityNetwork);
      }
    }
    
    public void populateTable1(){
      
      DefaultTableModel dtm = (DefaultTableModel)tblInventory.getModel();
       dtm.setRowCount(0);
     
           Object[] row1 = new Object[3];
           System.out.println("INV"+organization.getInventoryDirectory().getInventoryList());
    for(Organization organization1:enterprise.getOrganizationDirectory().getOrganizationList()){
           System.out.println("COMPARETO"+organization1+"HY"+String.valueOf(organization1).equals("Inventory Organization"));
           if(String.valueOf(organization1).equals("Inventory Organization")){   
               System.out.println("INventoryList"+organization1);
    for(Inventory inventory: organization1.getInventoryDirectory().getInventoryList()){
        row1[0]= inventory.getInventoryId();
        row1[1]=inventory.getProductName();
        row1[2]=inventory.getProductQuantity();
        dtm.addRow(row1);
        a = inventory.getProductQuantity();
    }
           }
    }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInventory = new javax.swing.JTable();
        btnAssign = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboAssignState = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        comboAssignCity = new javax.swing.JComboBox();
        btnBack = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtZipCode = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtLocation = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        comboAssignCountry = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel1.setText("Assign UAV");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 40, -1, -1));

        tblInventory.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        tblInventory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Product Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInventory);
        if (tblInventory.getColumnModel().getColumnCount() > 0) {
            tblInventory.getColumnModel().getColumn(0).setResizable(false);
            tblInventory.getColumnModel().getColumn(1).setResizable(false);
            tblInventory.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 630, 120));

        btnAssign.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });
        add(btnAssign, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 530, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("Assign To:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, -1, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("Country:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, -1, -1));

        comboAssignState.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        comboAssignState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAssignStateActionPerformed(evt);
            }
        });
        add(comboAssignState, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 330, 140, -1));

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel5.setText("ZipCode:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 480, -1, -1));

        comboAssignCity.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        add(comboAssignCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 380, 140, -1));

        btnBack.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 620, -1, -1));

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel6.setText("City:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 380, -1, -1));

        txtZipCode.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        add(txtZipCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 480, 140, -1));

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel7.setText("Location:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 430, -1, -1));

        txtLocation.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        add(txtLocation, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 430, 140, -1));

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel8.setText("State:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 330, -1, -1));

        comboAssignCountry.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        comboAssignCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAssignCountryActionPerformed(evt);
            }
        });
        add(comboAssignCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 280, 140, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pic/background2.png"))); // NOI18N
        jLabel3.setText("jLabel3");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1100, 700));
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblInventory.getSelectedRow();
        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row");
            return;
        }
        System.out.println("a"+a+"b"+b);
        if(a>b){
        String productname = String.valueOf(tblInventory.getValueAt(selectedRow,1));
        for(Organization organization1:enterprise.getOrganizationDirectory().getOrganizationList()){
            if(organization1 instanceof InventoryOrganization){
                for(Inventory inventory:organization1.getInventoryDirectory().getInventoryList()){
                    if(inventory.getProductName().equalsIgnoreCase(productname)){
                       int qty = inventory.getProductQuantity();
                       inventory.setProductQuantity(qty-1);
                       b = inventory.getProductQuantity();
                    }
                }
            }
        }
        String country = String.valueOf(comboAssignCountry.getSelectedItem());
        String state = String.valueOf(comboAssignState.getSelectedItem());
        String city = String.valueOf(comboAssignCity.getSelectedItem());
        String location = txtLocation.getText();
        String ZipCode = txtZipCode.getText();
        if((location != null)&&!(location.isEmpty()) && (ZipCode != null)&&!(ZipCode.isEmpty()) && (country != null) && (state != null) && (city != null))
        {
            Pattern pattern = Pattern.compile("[^A-Za-z0-9]");
            Matcher m = pattern.matcher(location+ZipCode);
            boolean boo = m.find();
            if(boo == true || location == null || ZipCode == null) {
                JOptionPane.showMessageDialog(null,"Enter Valid Details");
            }
            else{  
                
                
                for(Organization organization2:enterprise.getOrganizationDirectory().getOrganizationList()){
            //System.out.println("AAAAA"+String.valueOf(organization2).equals("Environmental Assign Organization"));
                    if(organization2 instanceof EnvironmentalAssignOrganization){
                        organization2.getAssignmentdirectory().createAssignment(productname,country, state, city, location, ZipCode);
                        System.out.println("checkelementsinarray"+organization2.getAssignmentdirectory().getAssignmentList());
            
                    }
                }
                populateTable1();
               
            }
            
        }
        else {
            JOptionPane.showMessageDialog(null,"Enter Valid Details");
        }   
        }
        else{
            
            JOptionPane.showMessageDialog(null,"UAV are is not available");
                
        }
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);
    }//GEN-LAST:event_btnBackActionPerformed

    private void comboAssignStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAssignStateActionPerformed
        // TODO add your handling code here:
        StateNetwork stateNetwork = (StateNetwork) comboAssignState.getSelectedItem();
        if(stateNetwork != null){
            populateCityComboBox(stateNetwork);
        }
    }//GEN-LAST:event_comboAssignStateActionPerformed

    private void comboAssignCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAssignCountryActionPerformed
        // TODO add your handling code here:
         CountryNetwork countryNetwork = (CountryNetwork) comboAssignCountry.getSelectedItem();
        if(countryNetwork != null){
            populateStateComboBox(countryNetwork);
        }
    }//GEN-LAST:event_comboAssignCountryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JComboBox comboAssignCity;
    private javax.swing.JComboBox comboAssignCountry;
    private javax.swing.JComboBox comboAssignState;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblInventory;
    private javax.swing.JTextField txtLocation;
    private javax.swing.JTextField txtZipCode;
    // End of variables declaration//GEN-END:variables
}
